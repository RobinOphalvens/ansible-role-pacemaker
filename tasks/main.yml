---
- name: Install PCS package
  package:
    name: pcs
    state: installed

- name: Enable and start PCS daemon
  service:
    name: pcsd
    enabled: true
    state: started

- name: Set password for the user {{ pacemaker_user }}
  user:
    name: "{{ pacemaker_user }}"
    system: true
    password: "{{ pacemaker_password | password_hash('sha512', ansible_hostname) }}"

- name: Authenticate all nodes
  command: >
    pcs cluster auth
    {{ pacemaker_hosts | default(ansible_play_batch) | join(' ') }}
    -u {{ pacemaker_user }} -p {{ pacemaker_password }}
  run_once: true
  args:
    creates: /var/lib/pcsd/tokens

- name: Setup message bus
  run_once: true
  command: >
    pcs cluster setup --name {{ pacemaker_cluster_name }}
    {{ pacemaker_hosts | default(ansible_play_batch) | join(' ') }}
  args:
    creates: /etc/corosync/corosync.conf

- name: Start all nodes
  service:
    name: "{{ item }}"
    enabled: true
    state: started
  with_items:
    - corosync
    - pacemaker

- name: Create a temporary file
  tempfile:
    suffix: .xml
  register: pacemaker_config
  run_once: true
  check_mode: false
  changed_when: false

- name: Dump cluster configuration
  shell: cibadmin --query > {{ pacemaker_config.path | quote }}
  run_once: true
  check_mode: false
  changed_when: false

- name: Configure cluster properties
  include_tasks: nvpair.yml
  vars:
    xml_path: "{{ pacemaker_config.path }}"
    nvpair_parent: /cib/configuration/crm_config/cluster_property_set[@id="cib-bootstrap-options"]
  with_dict: "{{ pacemaker_properties | default({}) }}"
  loop_control:
    loop_var: nvpair
    label: "{{ '{' ~ nvpair.key ~ ': ' ~ nvpair.value ~ '}' }}"

- name: Configure resource defaults
  include_tasks: nvpair.yml
  vars:
    xml_path: "{{ pacemaker_config.path }}"
    nvpair_parent: /cib/configuration/rsc_defaults/meta_attributes[@id="rsc_defaults-options"]
  with_dict: "{{ pacemaker_resource_defaults | default({}) }}"
  loop_control:
    loop_var: nvpair
    label: "{{ '{' ~ nvpair.key ~ ': ' ~ nvpair.value ~ '}' }}"

- name: Configure simple resources
  include_tasks: primitive.yml
  vars:
    xml_path: "{{ pacemaker_config.path }}"
    primitive_parent: /cib/configuration/resources
  with_dict: "{{ pacemaker_simple_resources | default({}) }}"
  loop_control:
    loop_var: primitive

- name: Configure advanced resources
  include_tasks: adv-resource.yml
  vars:
    xml_path: "{{ pacemaker_config.path }}"
  with_dict: "{{ pacemaker_advanced_resources | default({}) }}"
  loop_control:
    loop_var: resource

- name: Configure resource constraints
  include_tasks: constraint.yml
  vars:
    xml_path: "{{ pacemaker_config.path }}"
  loop: "{{ pacemaker_constraints | default([]) }}"
  loop_control:
    loop_var: constraint
