---
- name: Install PCS package
  package:
    name: pcs
    state: installed

- name: Enable and start PCS daemon
  service:
    name: pcsd
    enabled: true
    state: started

- name: Generate a password for the user {{ pcmk_user }}
  set_fact:
    pcmk_password: "{{ ansible_machine_id | to_uuid }}"
  run_once: true
  when: pcmk_password is not defined

- name: Set password for the user {{ pcmk_user }}
  user:
    name: "{{ pcmk_user }}"
    system: true
    password: "{{ pcmk_password | password_hash('sha512', ansible_hostname) }}"

- name: Authenticate all nodes
  command: >
    pcs cluster auth
    {{ pcmk_hosts | default(ansible_play_batch) | join(' ') }}
    -u {{ pcmk_user }}
    -p {{ pcmk_password | quote }}
  run_once: true
  args:
    creates: /var/lib/pcsd/tokens

- name: Setup message bus
  run_once: true
  command: >
    pcs cluster setup --name {{ pcmk_cluster_name | quote }}
    {{  pcmk_hosts | default(ansible_play_batch) | join(' ') }}
    {%  set vq_options = pcmk_votequorum | default({}) %}
    {%  for key in vq_options.keys() | intersect(pcmk_vq_keys) %}
    {%    if pcmk_votequorum[key] is sameas(true) %}
    {%      set value = 1 %}
    {%    elif pcmk_votequorum[key] is sameas(false) %}
    {%      set value = 0 %}
    {%    else %}
    {%      set value = pcmk_votequorum[key] %}
    {%    endif %}
    {{    '--%s=%s' | format(key, value) }}
    {%  endfor %}
  args:
    creates: /etc/corosync/corosync.conf

- name: Start all nodes
  service:
    name: "{{ item }}"
    enabled: true
    state: started
  loop:
    - corosync
    - pacemaker

- name: Set up CIB XML
  run_once: true
  include_tasks: _cib.yml
