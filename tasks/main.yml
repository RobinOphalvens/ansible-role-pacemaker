---

- name: Install Pacemaker Configuration System package
  yum:
    name: "{{ pacemaker_package }}"
    state: installed

- name: Enable and start PCS daemon
  service:
    name: pcsd
    enabled: true
    state: started

- name: Generate a password for the user {{ pcmk_user }}
  set_fact:
    pcmk_password: "{{ ansible_machine_id | to_uuid }}"
  run_once: true
  when: pcmk_password is not defined

- name: Set password for the user {{ pcmk_user }}
  user:
    name: "{{ pcmk_user }}"
    system: true
    password: "{{ pcmk_password | password_hash('sha512', ansible_hostname) }}"

- name: Print variable ansible batch
  debug:
    msg: " {{ pcmk_cluster_nodes | join(' ') }}"

- name: Authenticate all nodes
  command: >
    pcs cluster auth
    {{ pcmk_cluster_nodes | join(' ') }}
    -u {{ pcmk_user }}
    -p {{ pcmk_password | quote }}
  run_once: true
  args:
    creates: /var/lib/pcsd/tokens

- name: Print variable cluster
  debug:
    msg: "{{ pcmk_cluster_name | quote }}"

- name: Setup message bus
  run_once: true
  command: >
    pcs cluster setup --name {{ pcmk_cluster_name | quote }}
    {{  pcmk_cluster_nodes | join(' ') }}
    {%  for key, value in pcmk_votequorum.items() %}
    {%    if value is sameas(true) %}
    {%      set value = 1 %}
    {%    elif value is sameas(false) %}
    {%      set value = 0 %}
    {%    endif %}
    {{    '--%s=%s' | format(key, value) }}
    {%  endfor %}
  args:
    creates: /etc/corosync/corosync.conf

- name: Start all nodes
  service:
    name: "{{ item }}"
    enabled: true
    state: started
  loop:
    - corosync
    - pacemaker
  
- include_tasks: pre.yml

- name: Configure cluster properties
  include_tasks: nvpair.yml
  vars:
    nvpair_parent: /cib/configuration/crm_config/cluster_property_set[@id="cib-bootstrap-options"]
    parent_id: cib-bootstrap-options
  with_dict: "{{ pcmk_cluster_options }}"
  loop_control:
    loop_var: nvpair
    label: "{{ '{' ~ nvpair.key ~ ': ' ~ nvpair.value ~ '}' }}"
  run_once: true

- name: Configure resource defaults
  include_tasks: nvpair.yml
  vars:
    nvpair_parent: /cib/configuration/rsc_defaults/meta_attributes[@id="rsc_defaults-options"]
    parent_id: rsc_defaults-options
  with_dict: "{{ pcmk_resource_defaults }}"
  loop_control:
    loop_var: nvpair
    label: "{{ '{' ~ nvpair.key ~ ': ' ~ nvpair.value ~ '}' }}"
  run_once: true

- name: Configure cluster resources
  include_tasks: resource.yml
  loop_control:
    loop_var: pcmk_resource
  loop: "{{ pcmk_resources }}"
  when: pcmk_resources is defined

- name: Configure advanced cluster resources
  include_tasks: advances-resource.yml
  loop_control:
    loop_var: pcmk_resource
  loop: "{{ pcmk_advanced_resources }}"
  when: pcmk_advanced_resources is defined

- name: Configure resource groups
  include_tasks: group.yml
  loop_control:
    loop_var: pcmk_group
  loop: "{{ pcmk_groups }}"
  when: pcmk_groups is defined

- name: Configure cluster constraints
  include_tasks: constraint.yml
  loop_control:
    loop_var: pcmk_constraint
  loop: "{{ pcmk_constraints }}"
  when: pcmk_constraints is defined

- include_tasks: post.yml
